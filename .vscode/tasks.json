{
	// See https://go.microsoft.com/fwlink/?LinkId=733558
	// for the documentation about the tasks.json format
	"version": "2.0.0",
	"tasks": [
		{
			"label": "Build And Run Graphical",
			"type": "shell",
			"dependsOrder": "sequence",
			"dependsOn": [
				"Build FASM Graphical",
				"Run EXE"
			],
			"group": {
				"kind": "build",
				"isDefault": true
			},
			"problemMatcher": []
		},
		{
			"label": "Build And Run Logic",
			"type": "shell",
			"dependsOrder": "sequence",
			"dependsOn": [
				"Build FASM Logic",
				"Run EXE"
			],
			"group": {
				"kind": "build",
				"isDefault": true
			},
			"problemMatcher": []
		},
		{
			"label": "Run EXE",
			"type": "shell",
			"command": "${workspaceFolder}/calc.exe",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"clear": false
			},
			"problemMatcher": []
		},
		{
			"label": "Build FASM Graphical",
			"type": "shell",
			"command": "fasm ${workspaceFolder}/src/main-graphic.asm ${workspaceFolder}/calc.exe",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"clear": true
			},
			"problemMatcher": {
				"fileLocation": "absolute",
				"source": "FASM",
				"severity": "error",
				"pattern":[
					{
						"regexp": "^(.*) \\[([0-9]+)\\]: ?$",
						"line": 2,
						"file": 1,
						"kind": "location"
					},
					{
						"regexp": "^.*$",
					},
					{
						"regexp": "^processed: (.*)$",
						"code": 1,
					},
					{
						"regexp": "^error: (.*)$",
						"message": 1,
					}
				]
			}
		},
		{
			"label": "Build FASM Logic",
			"type": "shell",
			"command": "fasm ${workspaceFolder}/src/main-logic.asm ${workspaceFolder}/calc.exe",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true
			},
			"problemMatcher": {
				"fileLocation": "absolute",
				"source": "FASM",
				"severity": "error",
				"pattern":[
					{
						"regexp": "^(.*) \\[([0-9]+)\\]: ?$",
						"line": 2,
						"file": 1,
						"kind": "location"
					},
					{
						"regexp": "^.*$",
					},
					{
						"regexp": "^processed: (.*)$",
						"code": 1,
					},
					{
						"regexp": "^error: (.*)$",
						"message": 1,
					}
				]
			}
		}
	]
}